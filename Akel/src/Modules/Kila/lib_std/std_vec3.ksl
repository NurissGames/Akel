// This file is a part of Akel
// CREATED : 12/11/2021
// UPDATED : 12/11/2021

@entry global

newtype class vec3
{
    public:
        var x: float;
        var y: float;
        var z: float;

        fn vec3()
        {
            x = 0;
            y = 0;
            z = 0;
        }
        fn vec3(var vec: vec3)
        {
            x = vec.x;
            y = vec.y;
            z = vec.z;
        }
        fn vec3(var _x: float, var _y: float, var _z: float)
        {
            x = _x;
            y = _y;
            z = _z;
        }
        fn vec3(var value: float)
        {
            x = value;
            y = value;
            z = value;
        }

        mtd operator+(var vec: vec3): vec3
        {
            x += vec.x;
            y += vec.y;
            z += vec.z;
            return this;
        }
        mtd operator+(var value: float)
        {
            x += value;
            y += value;
            z += value;
        }

        mtd operator-(var vec: vec3): vec3
        {
            x -= vec.x;
            y -= vec.y;
            z -= vec.z;
            return this;
        }
        mtd operator-(var value: float)
        {
            x -= value;
            y -= value;
            z -= value;
        }

        mtd operator*(var vec: vec3): vec3
        {
            x *= vec.x;
            y *= vec.y;
            z *= vec.z;
            return this;
        }
        mtd operator*(var value: float)
        {
            x *= value;
            y *= value;
            z *= value;
        }

        mtd operator/(var vec: vec3): vec3
        {
            x /= vec.x;
            y /= vec.y;
            z /= vec.z;
            return this;
        }
        mtd operator/(var value: float)
        {
            x /= value;
            y /= value;
            z /= value;
        }

        mtd operator=(var vec: vec3): vec3
        {
            x = vec.x;
            y = vec.y;
            z = vec.z;
            return this;
        }
        mtd operator=(var value: float)
        {
            x = value;
            y = value;
            z = value;
        }

        mtd operator==(var vec: vec3): bool
        {
            return x == vec.x && y == vec.y && z == vec.z;
        }
        mtd operator==(var value: float): bool
        {
            return x == value && y == value && z == value;
        }
        mtd operator!=(var vec: vec3): bool
        {
            return x != vec.x && y != vec.y && z != vec.z;
        }
        mtd operator!=(var value: float): bool
        {
            return x != value && y != value && z != value;
        }
}
